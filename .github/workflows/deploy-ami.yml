# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: deploy-ami

env:
  ARTIFACT_NAME: csye6225-webapp-${{github.sha}}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

on:
  push:
    branches: [ main ]
  #pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: codedeploy-createAMI

    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      #-DskipTests
      - name: Run packer script file
        run: |
          pwd
          mkdir staging && mv target/*.jar ./webservice.jar
          cp -r ./scripts/* ./

        shell: bash
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          # if you have/need it
          aws-region: ${{env.AWS_REGION}}

      - name: Run packer script file
        run: |
          ls -ltr
          pwd
          chmod +x ./scripts/create-ami.sh
          ./scripts/create-ami.sh
        shell: bash

